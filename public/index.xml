<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog do GRIS</title>
    <link>http://localhost:38113/</link>
    <description>Recent content on Blog do GRIS</description>
    <generator>Hugo</generator>
    <language>pt</language>
    <lastBuildDate>Mon, 02 Sep 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:38113/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SekaiCTF 2024 writeup: Blockchain/ZOO</title>
      <link>http://localhost:38113/blog/2024-08-25-sekaictf-zoo/</link>
      <pubDate>Mon, 02 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-08-25-sekaictf-zoo/</guid>
      <description>&lt;h1 id=&#34;o-desafio&#34;&gt;O desafio&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Autor: snwo&lt;/li&gt;&#xA;&lt;li&gt;Descrição: &lt;em&gt;Welcome to assembly zoo&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;análise-inicial&#34;&gt;Análise inicial&lt;/h1&gt;&#xA;&lt;p&gt;Dando uma olhada no contrato de setup,&#xA;vemos que o objetivo final é&#xA;setar a variável &lt;code&gt;isSolved&lt;/code&gt; no contrato &lt;code&gt;ZOO&lt;/code&gt; para &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;contract&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Setup&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ZOO&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;immutable&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zoo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;payable&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;zoo&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ZOO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;isSolved&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;view&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;returns&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;ne&#34;&gt;bool&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;zoo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isSolved&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Logo de cara,&#xA;&lt;code&gt;ZOO&lt;/code&gt; tem alguns pontos interessantes.&#xA;Esse contrato implementa &lt;code&gt;Pausable&lt;/code&gt;&#xA;e chama a função &lt;code&gt;_pause&lt;/code&gt; no final do construtor.&#xA;Usando a &lt;a href=&#34;https://docs.openzeppelin.com/contracts/4.x/api/security#Pausable&#34;&gt;documentação&lt;/a&gt;,&#xA;vemos que isso é um mecanismos pra habilitar/desabilitar funções do contrato.&#xA;Quando pausado,&#xA;funções marcadas com o modificador &lt;code&gt;whenNotPaused&lt;/code&gt;&#xA;chamam &lt;code&gt;revert&lt;/code&gt; ao serem chamadas.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tutorial de Game Hacking utilizando Cheat Engine</title>
      <link>http://localhost:38113/blog/2024-08-11-tutorial-game-hacking-cheat-engine/</link>
      <pubDate>Mon, 12 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-08-11-tutorial-game-hacking-cheat-engine/</guid>
      <description>&lt;p&gt;Abordaremos neste artigo sobre os princípios fundamentais sobre Game Hacking, ensinando como utilizar o Cheat Engine, um programa clássico para mudar aspectos de um jogo a seu favor.&lt;/p&gt;&#xA;&lt;h3 id=&#34;sobre-processos&#34;&gt;Sobre Processos&lt;/h3&gt;&#xA;&lt;p&gt;Antes de tudo, é bom deixar bem definido sobre o que é um jogo para o computador. Ao abrirmos qualquer programa executável, o sistema operacional cria um novo processo para rodar este programa. Um &lt;strong&gt;Processo&lt;/strong&gt; é, portanto, uma tarefa em execução no computador. Podem ter múltiplos processos rodando ao mesmo tempo, sendo em janelas ou em plano de fundo, e pode se criar vários processos de um mesmo programa.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Exploração de vulnerabilidades em ambientes virtuais</title>
      <link>http://localhost:38113/blog/2024-08-11-exploracao-metasploitable2/</link>
      <pubDate>Sun, 11 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-08-11-exploracao-metasploitable2/</guid>
      <description>&lt;h2 id=&#34;introdução&#34;&gt;Introdução&lt;/h2&gt;&#xA;&lt;p&gt;Neste post, vamos abordar como identificar e explorar algumas vulnerabilidades comuns encontradas na máquina vulnerável Metasploitable 2, utilizando ferramentas e métodos que são amplamente aplicáveis em cenários reais.&lt;/p&gt;&#xA;&lt;h2 id=&#34;o-que-é-o-metasploitable-2&#34;&gt;O que é o Metasploitable 2?&lt;/h2&gt;&#xA;&lt;p&gt;Metasploitable 2 é uma máquina virtual intencionalmente vulnerável, desenvolvida pela Rapid7, projetada para ser uma plataforma de prática para profissionais e entusiastas de segurança cibernética. Ela simula um ambiente de rede com várias vulnerabilidades conhecidas, permitindo que os usuários testem e aprimorem suas habilidades em pentest sem comprometer sistemas reais.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Modern Binary Exploitation: Laboratório de Engenharia Reversa</title>
      <link>http://localhost:38113/blog/2024-08-11-writeup-lab01-rev-mbe/</link>
      <pubDate>Sun, 11 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-08-11-writeup-lab01-rev-mbe/</guid>
      <description>&lt;p&gt;Olá! Nesse post, resolveremos o primeiro laboratório do &lt;a href=&#34;https://github.com/RPISEC/MBE&#34;&gt;Modern Binary Exploitation&lt;/a&gt; da &lt;a href=&#34;https://rpis.ec/&#34;&gt;RPISEC&lt;/a&gt; que aborda a &lt;strong&gt;Engenharia Reversa&lt;/strong&gt;. Caso tenha interesse no assunto, temos diversos posts no blog que abordam o tema, basta acessar a tag!&lt;/p&gt;&#xA;&lt;h1 id=&#34;laboratório-01&#34;&gt;Laboratório 01&lt;/h1&gt;&#xA;&lt;p&gt;Todos os laboratórios do curso residem dentro de uma máquina virtual disponibilizada no material através de uma imagem de disco para Ubuntu 14.04, que possui toda a configuração necessária para o Wargame. Os desafios são separados por laboratório e dificuldade, sendo C o mais fácil e A o mais difícil. Além disso, você acessa o challenge mediante ao usuário do respectivo desafio. Portanto, começando no C, o seu objetivo é exploitar o desafio para spawnar o terminal logado no usuário da&#xA;próxima challenge e pegar a senha dele (que está em &lt;code&gt;/home/labXX/.pass&lt;/code&gt;).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Uma introdução prática a Exploração de Binários com Engenharia Reversa: writeUp da sala pwn101 THM</title>
      <link>http://localhost:38113/blog/2024-08-11-pwn101-thm-writeup/</link>
      <pubDate>Sun, 11 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-08-11-pwn101-thm-writeup/</guid>
      <description>&lt;h1 id=&#34;pwn101-510-writeup&#34;&gt;[pwn101 5/10] writeUp&lt;/h1&gt;&#xA;&lt;h2 id=&#34;pwn101---challenge-1&#34;&gt;[pwn101 - Challenge 1]&lt;/h2&gt;&#xA;&lt;p&gt;A sala nos diz que a aplicação está rodando no endereço &amp;lsquo;10.10.151.216:9001&amp;rsquo;. Com o utilitário nc podemos escrever e ler em conexões TCP e UDP. Assim, podemos nos conectar com a aplicação usando o comando:&lt;/p&gt;&#xA;&lt;p&gt;nc 10.10.151.216 9001&lt;/p&gt;&#xA;&lt;p&gt;Ao conectarmos com a aplicação recebemos um texto com um pedido de ajuda para fornecer os ingredientes para o programa como input. A sala fornece uma dica de inicio &amp;lsquo;AAAAAAAAAAA&amp;rsquo;. É de se imaginar que o programa possua algum tipo de buffer overflow. É fácil de receber um shell quando tentamos quebrar a aplicação fornecendo uma string com um tamanho grande.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Explorando Criptografia de Reticulados</title>
      <link>http://localhost:38113/blog/2024-09-08-criptografia-de-reticulados/</link>
      <pubDate>Fri, 09 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-09-08-criptografia-de-reticulados/</guid>
      <description>&lt;h2 id=&#34;1-goldreich-goldwasser-halevi-ggh&#34;&gt;1. Goldreich-Goldwasser-Halevi (GGH):&lt;/h2&gt;&#xA;&lt;p&gt;O GGH é um sistema de criptografia de chave pública baseado no Problema de Vetor mais Próximo (CVP) em reticulados. Desenvolvido por Oded Golreich, Shafi Goldwasser e Shai Halevi, seu artigo foi publicado com o título “Public-key cryptosystems from lattice reduction problems.”, onde foi explorado problemas difíceis em reticulados com aplicação em criptografia e possíveis ataques ao sistema proposto.&lt;/p&gt;&#xA;&lt;p&gt;Pouco depois, o pesquisador Phong Nguyen fez a criptoanálise do GGH, expondo que qualquer texto encriptado vaza informações da mensagem original e que uma cifra pode ser decriptada com a aproximação do Problema de Base Mais Curta, que é uma variação do Problema de Vetor mais Curto (SVP) para matrizes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Forense Digital: Aquisição de logs e memória volátil/não volátil</title>
      <link>http://localhost:38113/blog/2024-08-09-aquisi%C3%A7%C3%A3o-de-imagens-forense/</link>
      <pubDate>Fri, 09 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-08-09-aquisi%C3%A7%C3%A3o-de-imagens-forense/</guid>
      <description>&lt;h2 id=&#34;introdução&#34;&gt;Introdução&lt;/h2&gt;&#xA;&lt;p&gt;Quando um incidente de segurança ocorre, é importante obter a imagem de memória do sistema pós incidente, para poder melhor analisar o que ocorreu e como ele foi invadido.&lt;/p&gt;&#xA;&lt;h2 id=&#34;aquisição-de-imagens&#34;&gt;Aquisição de Imagens&lt;/h2&gt;&#xA;&lt;p&gt;É importante diferenciar o conceito de cópia e imagem, especialmente para memória não volátil. A cópia do armazenamento de um dispositivo é a clonagem de todos seus arquivos ainda existentes (ou seja, arquivos deletados não serão copiados, pois o SO não pode mais os reconhecer).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Resolvendo os desafios iniciais de pwn do picoCTF</title>
      <link>http://localhost:38113/blog/2024-08-02-picogym-pwn-easy/</link>
      <pubDate>Fri, 02 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-08-02-picogym-pwn-easy/</guid>
      <description>&lt;p&gt;Esse é um writeup dos 15 desafios iniciais de pwning do picoGym. Você pode encontrar esses desafios em &lt;a href=&#34;https://play.picoctf.org/practice&#34;&gt;picoGym&lt;/a&gt;. Há também um desafio extra no final do post de um outro CTF :) &lt;br&gt;&#xA;Vamos começar ^^&lt;/p&gt;&#xA;&lt;h2 id=&#34;buffer-overflow-0&#34;&gt;buffer overflow 0&lt;/h2&gt;&#xA;&lt;p&gt;Nos é dado este arquivo C:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;signal.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define FLAGSIZE_MAX 64&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FLAGSIZE_MAX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;sigsegv_handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;fflush&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;vuln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buf2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;strcpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;FILE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fopen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;flag.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%s %s&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Please create &amp;#39;flag.txt&amp;#39; in this directory with your&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;s&#34;&gt;&amp;#34;own debugging flag.&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;fgets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FLAGSIZE_MAX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;signal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SIGSEGV&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sigsegv_handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Set up signal handler&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kt&#34;&gt;gid_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getegid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;setresgid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Input: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;fflush&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buf1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;gets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;vuln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;The program will exit now&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Ao realizar um checksec, obtemos o seguinte resultado:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Introdução a provas de zero-knowledge - Parte 1</title>
      <link>http://localhost:38113/blog/2024-07-15-intro-zero-knowledge/</link>
      <pubDate>Mon, 15 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-07-15-intro-zero-knowledge/</guid>
      <description>&lt;p&gt;&lt;em&gt;Essa é a parte 1 de um estudo sobre ZKPs. A parte 2 irá conter a implementação desses protocolos utilizando Circom.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;o-que-são-zero-knowledge-proofs&#34;&gt;O que são Zero-Knowledge Proofs?&lt;/h1&gt;&#xA;&lt;p&gt;ZK Proofs (ou em português algo como &amp;ldquo;provas de conhecimento zero&amp;rdquo;) são o que o próprio nome diz: provas de algo ou alguma coisa que não demonstram nenhum &amp;ldquo;conhecimento&amp;rdquo; adicional ao verificador.&lt;/p&gt;&#xA;&lt;h3 id=&#34;um-exemplo&#34;&gt;Um exemplo&lt;/h3&gt;&#xA;&lt;p&gt;Um exemplo bem simples pode ser visto no jogo da caverna:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Broken Access Control: Entendendo Vulnerabilidades de Controle de Acesso</title>
      <link>http://localhost:38113/blog/2024-08-06-broken-access-control/</link>
      <pubDate>Sat, 08 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-08-06-broken-access-control/</guid>
      <description>&lt;h2 id=&#34;o-que-é-broken-access-control&#34;&gt;O que é Broken Access Control?&lt;/h2&gt;&#xA;&lt;p&gt;Broken Access Control (BAC), ou Controle de Acesso Quebrado, é uma falha de segurança onde os mecanismos de controle de acesso de um sistema não são implementados ou configurados corretamente, permitindo que usuários mal-intencionados acessem recursos que deveriam estar restritos. Isso pode incluir a visualização de informações confidenciais, a modificação de dados ou a execução de operações privilegiadas.&lt;/p&gt;&#xA;&lt;h2 id=&#34;o-que-é-owasp-top-10&#34;&gt;O que é OWASP Top 10?&lt;/h2&gt;&#xA;&lt;p&gt;O OWASP Top 10 é uma lista publicada pela Open Web Application Security Project (OWASP) que destaca as dez vulnerabilidades mais críticas de segurança em aplicações web. Este documento é amplamente reconhecido e utilizado como um padrão de referência para o desenvolvimento seguro de software. A lista é atualizada periodicamente para refletir as novas ameaças e tendências de segurança.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Guia de Segurança Ofensiva</title>
      <link>http://localhost:38113/blog/2024-04-02-owasp-top10/</link>
      <pubDate>Sun, 05 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-04-02-owasp-top10/</guid>
      <description>&lt;h1 id=&#34;enumeração&#34;&gt;Enumeração&lt;/h1&gt;&#xA;&lt;h2 id=&#34;tipos-de-usuários&#34;&gt;tipos de usuários&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Non-root&lt;/strong&gt;&#xA;Usuários non-root são todos os usuários que não têm privilégios administrativos completos. O usuário &amp;ldquo;root&amp;rdquo; é o superusuário em sistemas Unix/Linux com controle total sobre o sistema. Usuários non-root têm permissões restritas, dependendo das políticas de segurança do sistema.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Non-service&lt;/strong&gt;&#xA;Usuários non-service referem-se a contas de usuário que não são usadas para rodar serviços do sistema. Em sistemas Unix/Linux, muitos serviços de sistema, como web servers, bancos de dados, e outros daemon, rodam sob contas de usuário específicas para isolar e limitar o impacto de possíveis comprometimentos de segurança. Contas de serviço tipicamente têm UIDs baixos (geralmente menores que 1000).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Writeup de alguns challenges de crypto do UTCTF 2024</title>
      <link>http://localhost:38113/blog/2024-04-02-writeup-crypto-utctf2024/</link>
      <pubDate>Tue, 02 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-04-02-writeup-crypto-utctf2024/</guid>
      <description>&lt;h1 id=&#34;rsa-256&#34;&gt;RSA-256&lt;/h1&gt;&#xA;&lt;h3 id=&#34;descrição&#34;&gt;Descrição:&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Based on the military-grade encryption offered by AES-256, RSA-256 will usher in a new era of cutting-edge security... or at least, better security than RSA-128.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Código do chall:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;N&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;77483692467084448965814418730866278616923517800664484047176015901835675610073&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;65537&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;11711610210897103123119971051169511511195828365955053549510511595100101100125&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Esse foi um challenge bem simples de RSA. Pelo nome do chall e dando uma olhada no tamanho do N, a gente consegue ver que o N não é tão grande (justamente 256 bits!)&#xA;Você pode conferir isso da seguinte forma:&lt;/p&gt;</description>
    </item>
    <item>
      <title>JSON Web Tokens</title>
      <link>http://localhost:38113/blog/2024-03-19-json-web-tokens/</link>
      <pubDate>Thu, 14 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-03-19-json-web-tokens/</guid>
      <description>&lt;h1 id=&#34;definindo-json-web-tokens&#34;&gt;Definindo JSON Web Tokens&lt;/h1&gt;&#xA;&lt;p&gt;JSON Web Token (JWT) é um formato  para transmitir informações entre partes como um objeto JSON. Do ponto de vista de segurança, JWT é uma ferramenta valiosa, pois oferece autenticação e autorização em um formato que pode ser facilmente verificado e confiado.&lt;/p&gt;&#xA;&lt;p&gt;Para identificar um JWT, pode-se observar a estrutura básica composta por três partes separadas por pontos &lt;code&gt;.&lt;/code&gt;: o cabeçalho (header), o payload (carga útil), e a assinatura (signature). Essas partes são codificadas em Base64 e são visualmente separadas por pontos.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Assault Cube Hack - Parte 2</title>
      <link>http://localhost:38113/blog/2024-02-19-assault-cube-hack-parte-2/</link>
      <pubDate>Mon, 19 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-02-19-assault-cube-hack-parte-2/</guid>
      <description>&lt;h1 id=&#34;desenvolvimento-de-código&#34;&gt;Desenvolvimento de Código&lt;/h1&gt;&#xA;&lt;h2 id=&#34;criando-o-projeto&#34;&gt;&lt;strong&gt;Criando o Projeto&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Antes de começar o código vamos criar um projeto no Visual Studio, procure e selecione &lt;em&gt;Dynamic Link Library (DLL)&lt;/em&gt; para C++ como tipo de projeto como na imagem a seguir.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:38113/images/ac-hack-7.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Dê um nome ao projeto e escolha um local para salvá-lo e teremos uma estrutura inicial desta forma.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:38113/images/ac-hack-8.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;A estrutura do nosso código se dividirá em 3 funções, &lt;strong&gt;&lt;code&gt;DllMain&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;HackThread&lt;/code&gt;&lt;/strong&gt; e &lt;strong&gt;&lt;code&gt;UpdatePlayerStats&lt;/code&gt;&lt;/strong&gt;. Irei explicar mais adiante detalhadamente cada uma.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Softphones e telefonia pela Internet</title>
      <link>http://localhost:38113/blog/2024-01-13-voip-calls/</link>
      <pubDate>Sat, 13 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-01-13-voip-calls/</guid>
      <description>&lt;h2 id=&#34;introdução&#34;&gt;Introdução&lt;/h2&gt;&#xA;&lt;p&gt;Você já ouviu falar de VoIP e softphones? Neste post, vamos aprender um pouco sobre os fundamentos da telefonia pela Internet e ver na prática a configuração de um software para efetuar chamadas telefônicas que se aproveita da linha fixa telefônica que vem junto do seu modem de internet.&lt;/p&gt;&#xA;&lt;p&gt;Antigamente, para realizar chamadas telefônicas, era comum a utilização de um telefone fixo com fio. Para isso, era necessário se conectar à rede PSTN (&lt;em&gt;Public Switched Telephone Network&lt;/em&gt; ou Rede Telefônica Pública Comutada), uma infraestrutura mundial de redes de telefonia pública que utiliza cabos de cobre ou fibra óptica para transmitir dados de voz analógicos.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Entendendo o Papel do Kernel na Segurança de Jogos Online</title>
      <link>http://localhost:38113/blog/2024-01-12-kernel-cheating/</link>
      <pubDate>Fri, 12 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-01-12-kernel-cheating/</guid>
      <description>&lt;h1 id=&#34;o-que-é-o-kernel&#34;&gt;O que é o kernel&lt;/h1&gt;&#xA;&lt;p&gt;Quando falamos em sistemas operacionais, em geral pensamos em recursos visuais e interativos como suas aplicações e interface gráfica. No entanto, além de fornecer a interface com o usuário, o sistema também precisa se comunicar com a parte física do computador: o &lt;em&gt;hardware&lt;/em&gt;. Por conta disso, em geral definimos duas categorias de atuação de um sistema operacional:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;User level&lt;/li&gt;&#xA;&lt;li&gt;Kernel level&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;A primeira delas, que seria o nível de usuário ou espaço de usuário, consiste em todo o espaço reservado para executar aplicações comuns instaladas em um sistema, como o navegador, o editor de textos ou até mesmo binários em linha de comando. Quando esses programas são executados, o kernel aloca os recursos necessários para as mesmas, criando uma espécie de &lt;em&gt;sandbox&lt;/em&gt;, com uma quantidade qualquer de memória virtual.&lt;/p&gt;</description>
    </item>
    <item>
      <title>pwn 101: Desafios de Introdução a Buffer Overflow</title>
      <link>http://localhost:38113/blog/2024-01-12-pwn-101-desafios-de-introdu%C3%A7%C3%A3o-a-buffer-overflow-2944951e3ef04485a957cea3da0e3a4a/</link>
      <pubDate>Fri, 12 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-01-12-pwn-101-desafios-de-introdu%C3%A7%C3%A3o-a-buffer-overflow-2944951e3ef04485a957cea3da0e3a4a/</guid>
      <description>&lt;p&gt;Essa postagem tem como objetivo iniciar a jornada no mundo de pwning de maneira didática, ao demonstrar um&#xA;Buffer Over Flow, um exploit moderno que obtem vantagem sobre a Stack e buffers de memória.&lt;/p&gt;&#xA;&lt;h1 id=&#34;conceitos-básicos-de-programas&#34;&gt;Conceitos Básicos de Programas&lt;/h1&gt;&#xA;&lt;p&gt;Antes de tudo, é importante ter em mente alguns conceitos importantes antes de começar a jornada em pwning. Certos conceitos de low-level e como os programas são compostos vão ser extremamente importantes para entender&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sinergia entre a Internet Industrial das Coisas (IIoT) e as Infraestruturas Críticas</title>
      <link>http://localhost:38113/blog/2024-01-11-sinergia-iiot-ic/</link>
      <pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-01-11-sinergia-iiot-ic/</guid>
      <description>&lt;h2 id=&#34;resumo&#34;&gt;RESUMO&lt;/h2&gt;&#xA;&lt;p&gt;É consenso que a Internet Industrial das Coisas (IIoT) trouxe avanços tecnológicos para a indústria, além de novos arranjos de uma produção mais inteligente, que possibilita maior conexão entre tecnologia e desenvolvimento sustentável, além das melhorias nas funcionalidades do software SCADA, muito utilizado por diversos Sistemas de Controle Industriais (ICS). No entanto, há uma preocupação crescente com a segurança das Infraestruturas Críticas, uma vez que ficaram mais suscetíveis aos ataques cibernéticos. Nesse sentido, este resumo tem como objetivo fazer uma breve revisão bibliográfica sobre o assunto, pontuar sobre o cenário geral das inovações, além de fornecer ao leitor um exemplo de arquitetura de um sistema de tratamento de água baseado em ICS-SCADA/IIoT. A metodologia utilizada inclui além da consulta à base de artigos da Science Direct, também a base de documentos da WIPO (&lt;em&gt;World Intellectual Property Organization&lt;/em&gt;).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Desvendando a Enigma</title>
      <link>http://localhost:38113/blog/2024-01-10-enigma/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-01-10-enigma/</guid>
      <description>&lt;h2 id=&#34;introdução---o-que-é-a-enigma&#34;&gt;Introdução - O que é a Enigma?&lt;/h2&gt;&#xA;&lt;p&gt;Com a chegada da Segunda Guerra Mundial, os países envolvidos viram a necessidade de implementar métodos mais seguros de criptografia para que as comunicações entre rádios e outras comunicações militares não pudessem ser facilmente interceptadas e decifradas, e a Enigma foi a máquina eletromecânica de criptografia adotada pela Alemanha na Segunda Guerra Mundial.&lt;/p&gt;&#xA;&lt;p&gt;Ao longo da Guerra, muitos pesquisadores aliados estiveram envolvidos na solução da Enigma, ou melhor, nas técnicas de decriptação das mensagens intereceptadas. Suas pesquisas se baseavam em ‘KPA’ - “Known-plaintext attack”, provalmente porque as mensagens interceptadas se limitavam a somente 200 caracteres, o que dificultaria um ataque “ciphertext only”.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Write Up do Desafio Try me Out</title>
      <link>http://localhost:38113/blog/2024-01-09-write-up-try-me-out/</link>
      <pubDate>Tue, 09 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-01-09-write-up-try-me-out/</guid>
      <description>&lt;p&gt;Este foi um dos desafios inclusos no CTF da H2HC 2023. Para resolver esse desafio de forma mais elegante, é necessário observar os procedimentos matemáticos realizados e perceber suas relações com um algoritmo de decomposição de matrizes bem conhecido.&lt;/p&gt;&#xA;&lt;h3 id=&#34;entendendo-o-código&#34;&gt;Entendendo o código&lt;/h3&gt;&#xA;&lt;p&gt;A principal função deste programa é a função verify, que recebe um array de 24 caracteres. Isso dá o tamanho da flag. As variáveis mat1 e mat2 são arrays de arrays, o que é uma notação conhecida para matrizes. Além disso, mat2 é a transposta de mat1. A partir dessas variáveis, são encontradas outras duas, AAT e ATA, também matrizes, e surgem ma multiplicação de mat1 por mat2 e de mat2 por mat1, respectivamente. A função MatMul faz excluisvamente a multiplicação entre matrizes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bug bounty android: Um breve guia de um bug bounty em Android</title>
      <link>http://localhost:38113/blog/2024-01-08-bug-bounty-android/</link>
      <pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-01-08-bug-bounty-android/</guid>
      <description>&lt;h2 id=&#34;introdução&#34;&gt;Introdução&lt;/h2&gt;&#xA;&lt;p&gt;Bug bounty em Android é um programa no qual empresas ou desenvolvedores oferecem recompensas para pessoas que descobrem e relatam vulnerabilidades de segurança em seus aplicativos ou sistemas operacionais Android. Neste trabalho, abordaremos os principais tópicos relacionados a bug bounty em Android, incluindo a importância do programa, as etapas envolvidas, técnicas comuns de testes de segurança e melhores práticas.&lt;/p&gt;&#xA;&lt;h2 id=&#34;i-importância-do-bug-bounty-em-android&#34;&gt;I. Importância do Bug Bounty em Android:&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A crescente importância da segurança no ecossistema Android é impulsionada pelo aumento do número de ameaças cibernéticas direcionadas a dispositivos móveis.&lt;/li&gt;&#xA;&lt;li&gt;Os riscos potenciais de não ter um programa de bug bounty incluem o vazamento de dados dos usuários, comprometimento da integridade dos aplicativos e perda de reputação da empresa.&lt;/li&gt;&#xA;&lt;li&gt;Benefícios para os desenvolvedores e empresas que adotam um programa de bug bounty incluem a identificação antecipada de vulnerabilidades, melhoria da segurança e aumento da confiança dos usuários.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;ii-etapas-de-um-bug-bounty-em-android&#34;&gt;II. Etapas de um Bug Bounty em Android:&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Preparação:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>IPTables: Análise detalhada sobre o IPTables</title>
      <link>http://localhost:38113/blog/2024-01-08-analysis_iptables/</link>
      <pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-01-08-analysis_iptables/</guid>
      <description>&lt;h2 id=&#34;resumo&#34;&gt;RESUMO&lt;/h2&gt;&#xA;&lt;p&gt;Este trabalho tem como objetivo apresentar uma análise detalhada sobre o IPTables, uma ferramenta de firewall amplamente utilizada no sistema operacional Linux, com foco em sua eficácia na proteção e segurança de redes. Através de uma abordagem baseada na estrutura do modelo OSI (Open Systems Interconnection), este documento explora o conceito do IPTables, sua função, importância e modos de funcionamento. Além disso, são destacadas suas configurações e exemplos reais de como essa ferramenta atua na proteção contra diversos tipos de ataques cibernéticos.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Redes: IDS e IPS</title>
      <link>http://localhost:38113/blog/2024-01-08-redes-ips-ids/</link>
      <pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-01-08-redes-ips-ids/</guid>
      <description>&lt;h2 id=&#34;introdução&#34;&gt;Introdução&lt;/h2&gt;&#xA;&lt;p&gt;O objetivo dessa postagem é introduzir o leitor às principais diferenças entre IDS (sistemas de detecção a intrusões) e IPS (sistemas de prevenção a intrusões), destacando a diferença de desempenho e aplicação desses dois sistemas.&lt;/p&gt;&#xA;&lt;h2 id=&#34;o-que-é-o-ids&#34;&gt;O que é o IDS?&lt;/h2&gt;&#xA;&lt;p&gt;O IDS (Sistema de Detecção de Intrusões) é projetado para identificar atividades suspeitas ou comportamentos anômalos na rede. O IDS monitora o tráfego em tempo real em busca de padrões que possam indicar uma ameaça.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vulnerabilidades do Windows Subsystem for Linux (WSL)</title>
      <link>http://localhost:38113/blog/2024-08-06-vulnerabilities_wsl/</link>
      <pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-08-06-vulnerabilities_wsl/</guid>
      <description>&lt;h2 id=&#34;resumo&#34;&gt;RESUMO&lt;/h2&gt;&#xA;&lt;p&gt;Este trabalho tem como objetivo apresentar uma análise detalhada sobre as vulnerabilidades doVulnerabilidades do windows subsystem for linux (WSL), uma funcionalidade do sistema operacional Windows que permite aos usuários executar um sistema operacional Linux dentro do próprio sistema operacional Windows. Este trabalho tem o objetivo de explorar as vulnerabilidades do WSL de uma maneira estruturada e detalhada, ajudando a aumentar a conscientização e a segurança em torno desta ferramenta útil, mas potencialmente vulnerável.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Assault Cube Hack: Parte 1</title>
      <link>http://localhost:38113/blog/2024-01-07-assault-cube-hack-parte-1/</link>
      <pubDate>Sun, 07 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-01-07-assault-cube-hack-parte-1/</guid>
      <description>&lt;h1 id=&#34;análise-do-jogo&#34;&gt;Análise do Jogo&lt;/h1&gt;&#xA;&lt;h2 id=&#34;introdução&#34;&gt;Introdução&lt;/h2&gt;&#xA;&lt;p&gt;Este material visa fornecer um olhar detalhado sobre o processo de desenvolvimento de uma POC, &lt;em&gt;proof of concept&lt;/em&gt;, para cheats internos usando o jogo Assault Cube, um jogo de tiro em primeira pessoa de código aberto, perfeito para o escopo desse material.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Nosso objetivo aqui não é encorajar o uso desonesto de cheats, mas sim explorar as complexidades e habilidades técnicas necessárias para criar e entender tais modificações.&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>WPA-2 PSK: Capturando conexões e quebra de hashes</title>
      <link>http://localhost:38113/blog/2024-01-06-wpa2-psk/</link>
      <pubDate>Sat, 06 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-01-06-wpa2-psk/</guid>
      <description>&lt;h2 id=&#34;introdução&#34;&gt;Introdução&lt;/h2&gt;&#xA;&lt;p&gt;O objetivo dessa postagem é introduzir o leitor às principais etapas de conexão do protocolo WPA2-PSK (Wi-Fi Protected Access Pre Shared Key) e como os ataques a esse protocolo funcionam.&lt;/p&gt;&#xA;&lt;h2 id=&#34;o-que-é-o-wpa2-psk&#34;&gt;O Que é o WPA2-PSK?&lt;/h2&gt;&#xA;&lt;p&gt;O Protocolo WPA2-PSK (Wi-Fi Protected Access 2 - Pre-Shared Key) é um padrão de segurança para redes sem fio que foi desenvolvido para melhorar a proteção oferecida pelo seu antecessor, o WPA (Wi-Fi Protected Access). O WPA2-PSK é amplamente utilizado para proteger redes Wi-Fi domésticas e empresariais, garantindo a confidencialidade e a integridade das comunicações sem fio.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Guia Básico do Burp Suite: Explorando requisições com o Burp</title>
      <link>http://localhost:38113/blog/2023-12-24-guia-burp/</link>
      <pubDate>Sun, 24 Dec 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2023-12-24-guia-burp/</guid>
      <description>&lt;h2 id=&#34;introdução&#34;&gt;Introdução&lt;/h2&gt;&#xA;&lt;p&gt;O objetivo dessa postagem é introduzir o leitor às principais funcionalidades do Burp Suite.&lt;/p&gt;&#xA;&lt;h2 id=&#34;o-que-é-o-burp-suite&#34;&gt;O Que é o Burp Suite?&lt;/h2&gt;&#xA;&lt;p&gt;Em termos simples, o Burp Suite é um software projetado para testes de segurança em aplicativos web.&lt;/p&gt;&#xA;&lt;h3 id=&#34;principais-funcionalidades&#34;&gt;Principais Funcionalidades:&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Proxy&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;O proxy intercepta as requisições e respostas entre o navegador (cliente) e o servidor, permitindo aos usuários analisar e manipular o tráfego. Isso é fundamental para identificar e corrigir possíveis falhas de segurança.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Game Hacking: Using Dynamic Patching to Modify Games</title>
      <link>http://localhost:38113/blog/2023-08-03-patching-games/</link>
      <pubDate>Thu, 03 Aug 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2023-08-03-patching-games/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Have you ever considered modifying the source code of a game as you wish and playing with that modification? In this text, we will demonstrate how to modify a game in real-time using low-level knowledge, specifically assembly language. Additionally, we will develop a simple Python program to automate the process for us, employing the memory patching technique.&lt;/p&gt;&#xA;&lt;p&gt;Before proceeding, it is entirely possible that some of the expressions mentioned above may not be familiar to you. If you&amp;rsquo;re wondering what assembly is, it&amp;rsquo;s a low-level programming language that represents machine code in a human-readable format, specific to each type of CPU. Assembly (or simply ASM) instructions are crucial as they allow us to understand what a program or game is doing, even after it has been compiled into its final form.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hyperbleed - Current state of spectre-BTI mitigations on cloud</title>
      <link>http://localhost:38113/blog/2023-05-29-hyperbleed-post/</link>
      <pubDate>Mon, 29 May 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2023-05-29-hyperbleed-post/</guid>
      <description>&lt;h2 id=&#34;version-10&#34;&gt;Version 1.0&lt;/h2&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;During our tests for reverse spectre attacks &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;, we have observed that the behavior of the spectre-BTI&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt; mitigations differs between a bare-metal and a cloud-based scenario.&lt;/p&gt;&#xA;&lt;p&gt;The Linux kernel allows userspace processes to enable mitigations by calling prctl&lt;sup id=&#34;fnref:5&#34;&gt;&lt;a href=&#34;#fn:5&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;5&lt;/a&gt;&lt;/sup&gt; with the PR_GET_SPECULATION_CTRL which disables the speculation feature or by using seccomp&lt;sup id=&#34;fnref:6&#34;&gt;&lt;a href=&#34;#fn:6&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;6&lt;/a&gt;&lt;/sup&gt;.  The default behavior changed over time (from using IBPB/STIBP to IBRS).&lt;/p&gt;&#xA;&lt;p&gt;We have measured that on some instances of Google, AWS, Azure and Oracle, the spectre-BTI mitigation using prctl still leaves the victim exposed to attacks in some cases. In this research, we tested multiple scenarios in an attempt to enumerate the causes of failure for the mitigations.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Load&#43;Reload: Uma prova de conceito de um side-channel que explora a cache associativa de processadores AMD</title>
      <link>http://localhost:38113/blog/2022-10-02-load&#43;reload/</link>
      <pubDate>Sun, 02 Oct 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2022-10-02-load&#43;reload/</guid>
      <description>&lt;h1 id=&#34;introdução&#34;&gt;Introdução&lt;/h1&gt;&#xA;&lt;p&gt;Em busca da maior performance possível, os processadores atuais tiram&#xA;vantagem de diversos artifícios, muitas vezes sem grande consideração&#xA;pela segurança. Nesse contexto, ataques como Spectre (Kocher et al.&#xA;2019) e Meltdown (Lipp et al. 2018) mostram que a execução especulativa&#xA;é um tópico muito interessante a ser explorado. Nesse artigo,&#xA;construiremos uma prova de conceito do ataque Load+Reload (Lipp et al.&#xA;2020), que tira vantagem do preditor de &lt;em&gt;way&lt;/em&gt; presente na cache dos&#xA;processadores atuais da AMD. Durante esse processo, veremos uma forma&#xA;diferente de medir o tempo de leitura da memória, a thread contadora,&#xA;mais precisa do que a instrução &lt;code&gt;rdtsc&lt;/code&gt;, usada em ataques como&#xA;Flush+Reload (Yarom and Falkner 2014).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Salve</title>
      <link>http://localhost:38113/blog/salve/</link>
      <pubDate>Wed, 15 Dec 2021 22:32:17 -0300</pubDate>
      <guid>http://localhost:38113/blog/salve/</guid>
      <description>&lt;h1 id=&#34;coe-rapaziadaa&#34;&gt;Coe rapaziadaa&lt;/h1&gt;&#xA;&lt;h1 id=&#34;salve-&#34;&gt;salve ^^&lt;/h1&gt;</description>
    </item>
    <item>
      <title>ReDoS</title>
      <link>http://localhost:38113/blog/2018-06-03-redos/</link>
      <pubDate>Sun, 03 Jun 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2018-06-03-redos/</guid>
      <description>&lt;p&gt;Quinta-feira passada, eu estava procrastinando como sempre, quando me deparei com &lt;a href=&#34;https://youtu.be/IIwgeZgZFBo&#34;&gt;um vídeo&lt;/a&gt; de uma talk chamada &amp;ldquo;The State of the Web&amp;rdquo;. O título do vídeo em questão era &amp;ldquo;JavaScript Vulnerabilities&amp;rdquo;. Como amante de web pretensioso que sou, logo pensei &amp;ldquo;vou abrir, mas duvido que aprenda algo novo&amp;rdquo;. Apenas 51 segundos depois, o entrevistado disse a seguinte frase (traduzida):&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Também há coisas que as pessoas não pensam sobre, como &lt;strong&gt;regular expression denial-of-service.&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Keyloggers</title>
      <link>http://localhost:38113/blog/2018-05-23-keyloggers/</link>
      <pubDate>Wed, 23 May 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2018-05-23-keyloggers/</guid>
      <description>&lt;h3 id=&#34;o-que-são-para-que-servem-e-como-fazer-um&#34;&gt;O que são, para que servem, e como fazer um?&lt;/h3&gt;&#xA;&lt;p&gt;Uma das ferramentas potencialmente maliciosas mais bem conhecidas na área de computação é o &lt;em&gt;keylogger&lt;/em&gt;. Um keylogger é um programa (ou dispositivo) que detecta quando alguma tecla é pressionada no teclado e, de uma maneira ou de outra, guarda essa informação — seja para uso futuro pelo próprio usuário ou não.&lt;/p&gt;&#xA;&lt;p&gt;É importante notar que um keylogger não necessariamente é um spyware, isto é, um programa para espionar no usuário sem consentimento. O nome &lt;em&gt;keylogger&lt;/em&gt; se refere somente à funcionalidade da ferramenta e não ao seu uso.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Resumo sobre as características e o funcionamento do Docker - Parte I</title>
      <link>http://localhost:38113/blog/2017-10-08-resumo-sobre-o-funcionamento-do-docker-parte-i/</link>
      <pubDate>Sun, 08 Oct 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2017-10-08-resumo-sobre-o-funcionamento-do-docker-parte-i/</guid>
      <description>&lt;p&gt;O &lt;a href=&#34;https://www.docker.com/&#34;&gt;docker&lt;/a&gt; é um meio termo entre uma máquina virtual (= que roda um sistema guest (convidado) dentro de um sistema host (hospedeiro)) e um sistema rodando simultaneamente e concorrentemente com outro. Em primeiro lugar, ele é bem mais leve e mais rápido do que uma máquina virtual completa, pois reutiliza vários sub-sistemas do sistema host (diferentemente de uma máquina virtual, que tipicamente &amp;ldquo;emula&amp;rdquo; todos os aspectos de hardware e de software do guest), tal como o kernel. Em segundo lugar, assim como uma máquina virtual, tudo o que roda no docker está, a princípio (e por padrão) isolado do sistema host. Isso é feito por debaixo dos panos através de tecnologias existentes no kernel do Linux tais como cgroups e namespaces; uma consequência disso é que só é possível rodar o docker em sistemas relativamente recentes (por exemplo, qualquer Ubuntu 14.04 para cima já está de bom tamanho).&lt;/p&gt;</description>
    </item>
    <item>
      <title>CTF series piloto -- IO netgarage</title>
      <link>http://localhost:38113/blog/2016-11-22-ctfseries-piloto/</link>
      <pubDate>Tue, 22 Nov 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2016-11-22-ctfseries-piloto/</guid>
      <description>&lt;p&gt;h3ll0, fr13nd.&#xA;Esse post dá início a série voltada para guias de CTFs e wargames que foram resolvidos por membros do GRIS.&lt;/p&gt;&#xA;&lt;h3 id=&#34;mas-o-que-é-um-ctf-ou-wargame&#34;&gt;Mas o que é um CTF ou wargame?&lt;/h3&gt;&#xA;&lt;p&gt;Os capture the flags (CTFs) e wargames são ótimas formas de testar conhecimento na área da segurança. Nesses desafios temos aplicações projetadas com vulnerabilidades disponíveis para que a comunidade coloque em prática aquilo que foi estudado.&lt;/p&gt;&#xA;&lt;p&gt;O intuito das postagens sobre esses desafios não é fornecer respostas, mas guiar o leitor através da linha de raciocínio utilizada para resolvê-los . Estamos fazendo isso pois é difícil encontrar esse tipo de material em português e, além disso, é uma forma de fornecer a comunidade um pouco daquilo que aprendemos no GRIS.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mr. robot&#39;s raspberry Pi</title>
      <link>http://localhost:38113/blog/2016-11-07-mr-robot-raspberry-pi/</link>
      <pubDate>Mon, 07 Nov 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2016-11-07-mr-robot-raspberry-pi/</guid>
      <description>&lt;p&gt;Algum tempo atrás estava dando uma olhada nos posts da série Mr Robot do &lt;a href=&#34;http://null-byte.wonderhowto.com/how-to/mr-robot-hacks/&#34;&gt;null-byte&lt;/a&gt; e um artigo em especial me chamou a atenção.&lt;/p&gt;&#xA;&lt;p&gt;A publicação sobre como criar um raspberry para hacking não retrata fielmente as condições encontradas por Elliot no episódio eps1.3__da3m0ns.mp4. Então, optei por adaptar um pouco o tutorial para ele se tornar mais parecido com o conteúdo apresentado na televisão. De início, os passos serão bem semelhantes aos apresentados pelo null-byte mas no final, teremos um algo a mais.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bem-vindos ao blog do GRIS!</title>
      <link>http://localhost:38113/blog/2016-06-20-bem-vindos-ao-blog-do-gris/</link>
      <pubDate>Mon, 20 Jun 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2016-06-20-bem-vindos-ao-blog-do-gris/</guid>
      <description>&lt;p&gt;Teremos como intuito aqui apresentar ao público os desafios encontrados no dia a dia dos membros do grupo, comentários de notícias&#xA;do mundo da segurança cibernética, experimentos variados no campo da computação, gambiarras e muito mais.&lt;/p&gt;&#xA;&lt;p&gt;O GRIS é um dos grupos de extensão do departamento de ciência da computação da UFRJ. Ele surgiu com o objetivo de dar suporte aos alunos do curso no que diz respeito a tópicos de segurança da informação.&#xA;Ao longo dos anos o GRIS vem tentando disponibilizar o conhecimento adquirido pelos integrantes com os estudantes de ciência da computação. Essa é mais uma iniciativa  do Grupo de Respostas a incidentes de segurança de interagir não só com os alunos do curso, mas também com a comunidade de hacking como um todo.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Blog do GRIS</title>
      <link>http://localhost:38113/blog/2016-03-16-blog-do-gris/</link>
      <pubDate>Wed, 16 Mar 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2016-03-16-blog-do-gris/</guid>
      <description>&lt;h1 id=&#34;bem-vindos-ao-blog-do-gris&#34;&gt;Bem Vindos ao blog do GRIS&lt;/h1&gt;&#xA;&lt;p&gt;Texto aqui.&lt;/p&gt;&#xA;&lt;p&gt;vlw.&lt;/p&gt;&#xA;&lt;p&gt;Mussum ipsum cacilds, vidis litro abertis. Consetis adipiscings elitis. Pra lá , depois divoltis porris, paradis. Paisis, filhis, espiritis santis. Mé faiz elementum girarzis, nisi eros vermeio, in elementis mé pra quem é amistosis quis leo. Manduma pindureta quium dia nois paga. Sapien in monti palavris qui num significa nadis i pareci latim. Interessantiss quisso pudia ce receita de bolis, mais bolis eu num gostis.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Archive</title>
      <link>http://localhost:38113/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/archives/</guid>
      <description>archives</description>
    </item>
    <item>
      <title>Sample Post</title>
      <link>http://localhost:38113/blog/2011-03-10-sample-post/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2011-03-10-sample-post/</guid>
      <description>&lt;p&gt;Below is just about everything you&amp;rsquo;ll need to style in the theme. Check the source code to see the many embedded elements within paragraphs.&lt;/p&gt;&#xA;&lt;h1 id=&#34;heading-1&#34;&gt;Heading 1&lt;/h1&gt;&#xA;&lt;h2 id=&#34;heading-2&#34;&gt;Heading 2&lt;/h2&gt;&#xA;&lt;h3 id=&#34;heading-3&#34;&gt;Heading 3&lt;/h3&gt;&#xA;&lt;h4 id=&#34;heading-4&#34;&gt;Heading 4&lt;/h4&gt;&#xA;&lt;h5 id=&#34;heading-5&#34;&gt;Heading 5&lt;/h5&gt;&#xA;&lt;h6 id=&#34;heading-6&#34;&gt;Heading 6&lt;/h6&gt;&#xA;&lt;h3 id=&#34;body-text&#34;&gt;Body text&lt;/h3&gt;&#xA;&lt;p&gt;Lorem ipsum dolor sit amet, test link adipiscing elit. &lt;strong&gt;This is strong&lt;/strong&gt;. Nullam dignissim convallis est. Quisque aliquam.&lt;/p&gt;&#xA;&lt;p&gt;![Smithsonian Image]({{ site.url }}/images/3953273590_704e3899d5_m.jpg)&#xA;{: .image-right}&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;This is emphasized&lt;/em&gt;. Donec faucibus. Nunc iaculis suscipit dui. 53 = 125. Water is H&lt;!-- raw HTML omitted --&gt;2&lt;!-- raw HTML omitted --&gt;O. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. The New York Times &lt;!-- raw HTML omitted --&gt;(That’s a citation)&lt;!-- raw HTML omitted --&gt;. &lt;!-- raw HTML omitted --&gt;Underline&lt;!-- raw HTML omitted --&gt;. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
