<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Easy on Blog do GRIS</title>
    <link>http://localhost:38113/categories/easy/</link>
    <description>Recent content in Easy on Blog do GRIS</description>
    <generator>Hugo</generator>
    <language>pt</language>
    <lastBuildDate>Mon, 12 Aug 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:38113/categories/easy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tutorial de Game Hacking utilizando Cheat Engine</title>
      <link>http://localhost:38113/blog/2024-08-11-tutorial-game-hacking-cheat-engine/</link>
      <pubDate>Mon, 12 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-08-11-tutorial-game-hacking-cheat-engine/</guid>
      <description>&lt;p&gt;Abordaremos neste artigo sobre os princípios fundamentais sobre Game Hacking, ensinando como utilizar o Cheat Engine, um programa clássico para mudar aspectos de um jogo a seu favor.&lt;/p&gt;&#xA;&lt;h3 id=&#34;sobre-processos&#34;&gt;Sobre Processos&lt;/h3&gt;&#xA;&lt;p&gt;Antes de tudo, é bom deixar bem definido sobre o que é um jogo para o computador. Ao abrirmos qualquer programa executável, o sistema operacional cria um novo processo para rodar este programa. Um &lt;strong&gt;Processo&lt;/strong&gt; é, portanto, uma tarefa em execução no computador. Podem ter múltiplos processos rodando ao mesmo tempo, sendo em janelas ou em plano de fundo, e pode se criar vários processos de um mesmo programa.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Exploração de vulnerabilidades em ambientes virtuais</title>
      <link>http://localhost:38113/blog/2024-08-11-exploracao-metasploitable2/</link>
      <pubDate>Sun, 11 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-08-11-exploracao-metasploitable2/</guid>
      <description>&lt;h2 id=&#34;introdução&#34;&gt;Introdução&lt;/h2&gt;&#xA;&lt;p&gt;Neste post, vamos abordar como identificar e explorar algumas vulnerabilidades comuns encontradas na máquina vulnerável Metasploitable 2, utilizando ferramentas e métodos que são amplamente aplicáveis em cenários reais.&lt;/p&gt;&#xA;&lt;h2 id=&#34;o-que-é-o-metasploitable-2&#34;&gt;O que é o Metasploitable 2?&lt;/h2&gt;&#xA;&lt;p&gt;Metasploitable 2 é uma máquina virtual intencionalmente vulnerável, desenvolvida pela Rapid7, projetada para ser uma plataforma de prática para profissionais e entusiastas de segurança cibernética. Ela simula um ambiente de rede com várias vulnerabilidades conhecidas, permitindo que os usuários testem e aprimorem suas habilidades em pentest sem comprometer sistemas reais.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Modern Binary Exploitation: Laboratório de Engenharia Reversa</title>
      <link>http://localhost:38113/blog/2024-08-11-writeup-lab01-rev-mbe/</link>
      <pubDate>Sun, 11 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-08-11-writeup-lab01-rev-mbe/</guid>
      <description>&lt;p&gt;Olá! Nesse post, resolveremos o primeiro laboratório do &lt;a href=&#34;https://github.com/RPISEC/MBE&#34;&gt;Modern Binary Exploitation&lt;/a&gt; da &lt;a href=&#34;https://rpis.ec/&#34;&gt;RPISEC&lt;/a&gt; que aborda a &lt;strong&gt;Engenharia Reversa&lt;/strong&gt;. Caso tenha interesse no assunto, temos diversos posts no blog que abordam o tema, basta acessar a tag!&lt;/p&gt;&#xA;&lt;h1 id=&#34;laboratório-01&#34;&gt;Laboratório 01&lt;/h1&gt;&#xA;&lt;p&gt;Todos os laboratórios do curso residem dentro de uma máquina virtual disponibilizada no material através de uma imagem de disco para Ubuntu 14.04, que possui toda a configuração necessária para o Wargame. Os desafios são separados por laboratório e dificuldade, sendo C o mais fácil e A o mais difícil. Além disso, você acessa o challenge mediante ao usuário do respectivo desafio. Portanto, começando no C, o seu objetivo é exploitar o desafio para spawnar o terminal logado no usuário da&#xA;próxima challenge e pegar a senha dele (que está em &lt;code&gt;/home/labXX/.pass&lt;/code&gt;).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Uma introdução prática a Exploração de Binários com Engenharia Reversa: writeUp da sala pwn101 THM</title>
      <link>http://localhost:38113/blog/2024-08-11-pwn101-thm-writeup/</link>
      <pubDate>Sun, 11 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-08-11-pwn101-thm-writeup/</guid>
      <description>&lt;h1 id=&#34;pwn101-510-writeup&#34;&gt;[pwn101 5/10] writeUp&lt;/h1&gt;&#xA;&lt;h2 id=&#34;pwn101---challenge-1&#34;&gt;[pwn101 - Challenge 1]&lt;/h2&gt;&#xA;&lt;p&gt;A sala nos diz que a aplicação está rodando no endereço &amp;lsquo;10.10.151.216:9001&amp;rsquo;. Com o utilitário nc podemos escrever e ler em conexões TCP e UDP. Assim, podemos nos conectar com a aplicação usando o comando:&lt;/p&gt;&#xA;&lt;p&gt;nc 10.10.151.216 9001&lt;/p&gt;&#xA;&lt;p&gt;Ao conectarmos com a aplicação recebemos um texto com um pedido de ajuda para fornecer os ingredientes para o programa como input. A sala fornece uma dica de inicio &amp;lsquo;AAAAAAAAAAA&amp;rsquo;. É de se imaginar que o programa possua algum tipo de buffer overflow. É fácil de receber um shell quando tentamos quebrar a aplicação fornecendo uma string com um tamanho grande.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Explorando Criptografia de Reticulados</title>
      <link>http://localhost:38113/blog/2024-09-08-criptografia-de-reticulados/</link>
      <pubDate>Fri, 09 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-09-08-criptografia-de-reticulados/</guid>
      <description>&lt;h2 id=&#34;1-goldreich-goldwasser-halevi-ggh&#34;&gt;1. Goldreich-Goldwasser-Halevi (GGH):&lt;/h2&gt;&#xA;&lt;p&gt;O GGH é um sistema de criptografia de chave pública baseado no Problema de Vetor mais Próximo (CVP) em reticulados. Desenvolvido por Oded Golreich, Shafi Goldwasser e Shai Halevi, seu artigo foi publicado com o título “Public-key cryptosystems from lattice reduction problems.”, onde foi explorado problemas difíceis em reticulados com aplicação em criptografia e possíveis ataques ao sistema proposto.&lt;/p&gt;&#xA;&lt;p&gt;Pouco depois, o pesquisador Phong Nguyen fez a criptoanálise do GGH, expondo que qualquer texto encriptado vaza informações da mensagem original e que uma cifra pode ser decriptada com a aproximação do Problema de Base Mais Curta, que é uma variação do Problema de Vetor mais Curto (SVP) para matrizes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Forense Digital: Aquisição de logs e memória volátil/não volátil</title>
      <link>http://localhost:38113/blog/2024-08-09-aquisi%C3%A7%C3%A3o-de-imagens-forense/</link>
      <pubDate>Fri, 09 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-08-09-aquisi%C3%A7%C3%A3o-de-imagens-forense/</guid>
      <description>&lt;h2 id=&#34;introdução&#34;&gt;Introdução&lt;/h2&gt;&#xA;&lt;p&gt;Quando um incidente de segurança ocorre, é importante obter a imagem de memória do sistema pós incidente, para poder melhor analisar o que ocorreu e como ele foi invadido.&lt;/p&gt;&#xA;&lt;h2 id=&#34;aquisição-de-imagens&#34;&gt;Aquisição de Imagens&lt;/h2&gt;&#xA;&lt;p&gt;É importante diferenciar o conceito de cópia e imagem, especialmente para memória não volátil. A cópia do armazenamento de um dispositivo é a clonagem de todos seus arquivos ainda existentes (ou seja, arquivos deletados não serão copiados, pois o SO não pode mais os reconhecer).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Resolvendo os desafios iniciais de pwn do picoCTF</title>
      <link>http://localhost:38113/blog/2024-08-02-picogym-pwn-easy/</link>
      <pubDate>Fri, 02 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-08-02-picogym-pwn-easy/</guid>
      <description>&lt;p&gt;Esse é um writeup dos 15 desafios iniciais de pwning do picoGym. Você pode encontrar esses desafios em &lt;a href=&#34;https://play.picoctf.org/practice&#34;&gt;picoGym&lt;/a&gt;. Há também um desafio extra no final do post de um outro CTF :) &lt;br&gt;&#xA;Vamos começar ^^&lt;/p&gt;&#xA;&lt;h2 id=&#34;buffer-overflow-0&#34;&gt;buffer overflow 0&lt;/h2&gt;&#xA;&lt;p&gt;Nos é dado este arquivo C:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;signal.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define FLAGSIZE_MAX 64&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FLAGSIZE_MAX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;sigsegv_handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%s&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;fflush&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;vuln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buf2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;strcpy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;){&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;FILE&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fopen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;flag.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%s %s&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Please create &amp;#39;flag.txt&amp;#39; in this directory with your&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;s&#34;&gt;&amp;#34;own debugging flag.&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;fgets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;FLAGSIZE_MAX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;signal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;SIGSEGV&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sigsegv_handler&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// Set up signal handler&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kt&#34;&gt;gid_t&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getegid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;setresgid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Input: &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;fflush&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;buf1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;gets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;vuln&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;buf1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;The program will exit now&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Ao realizar um checksec, obtemos o seguinte resultado:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Introdução a provas de zero-knowledge - Parte 1</title>
      <link>http://localhost:38113/blog/2024-07-15-intro-zero-knowledge/</link>
      <pubDate>Mon, 15 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-07-15-intro-zero-knowledge/</guid>
      <description>&lt;p&gt;&lt;em&gt;Essa é a parte 1 de um estudo sobre ZKPs. A parte 2 irá conter a implementação desses protocolos utilizando Circom.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;o-que-são-zero-knowledge-proofs&#34;&gt;O que são Zero-Knowledge Proofs?&lt;/h1&gt;&#xA;&lt;p&gt;ZK Proofs (ou em português algo como &amp;ldquo;provas de conhecimento zero&amp;rdquo;) são o que o próprio nome diz: provas de algo ou alguma coisa que não demonstram nenhum &amp;ldquo;conhecimento&amp;rdquo; adicional ao verificador.&lt;/p&gt;&#xA;&lt;h3 id=&#34;um-exemplo&#34;&gt;Um exemplo&lt;/h3&gt;&#xA;&lt;p&gt;Um exemplo bem simples pode ser visto no jogo da caverna:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Guia de Segurança Ofensiva</title>
      <link>http://localhost:38113/blog/2024-04-02-owasp-top10/</link>
      <pubDate>Sun, 05 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-04-02-owasp-top10/</guid>
      <description>&lt;h1 id=&#34;enumeração&#34;&gt;Enumeração&lt;/h1&gt;&#xA;&lt;h2 id=&#34;tipos-de-usuários&#34;&gt;tipos de usuários&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Non-root&lt;/strong&gt;&#xA;Usuários non-root são todos os usuários que não têm privilégios administrativos completos. O usuário &amp;ldquo;root&amp;rdquo; é o superusuário em sistemas Unix/Linux com controle total sobre o sistema. Usuários non-root têm permissões restritas, dependendo das políticas de segurança do sistema.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Non-service&lt;/strong&gt;&#xA;Usuários non-service referem-se a contas de usuário que não são usadas para rodar serviços do sistema. Em sistemas Unix/Linux, muitos serviços de sistema, como web servers, bancos de dados, e outros daemon, rodam sob contas de usuário específicas para isolar e limitar o impacto de possíveis comprometimentos de segurança. Contas de serviço tipicamente têm UIDs baixos (geralmente menores que 1000).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Writeup de alguns challenges de crypto do UTCTF 2024</title>
      <link>http://localhost:38113/blog/2024-04-02-writeup-crypto-utctf2024/</link>
      <pubDate>Tue, 02 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-04-02-writeup-crypto-utctf2024/</guid>
      <description>&lt;h1 id=&#34;rsa-256&#34;&gt;RSA-256&lt;/h1&gt;&#xA;&lt;h3 id=&#34;descrição&#34;&gt;Descrição:&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Based on the military-grade encryption offered by AES-256, RSA-256 will usher in a new era of cutting-edge security... or at least, better security than RSA-128.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Código do chall:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;N&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;77483692467084448965814418730866278616923517800664484047176015901835675610073&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;65537&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;11711610210897103123119971051169511511195828365955053549510511595100101100125&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Esse foi um challenge bem simples de RSA. Pelo nome do chall e dando uma olhada no tamanho do N, a gente consegue ver que o N não é tão grande (justamente 256 bits!)&#xA;Você pode conferir isso da seguinte forma:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Assault Cube Hack - Parte 2</title>
      <link>http://localhost:38113/blog/2024-02-19-assault-cube-hack-parte-2/</link>
      <pubDate>Mon, 19 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-02-19-assault-cube-hack-parte-2/</guid>
      <description>&lt;h1 id=&#34;desenvolvimento-de-código&#34;&gt;Desenvolvimento de Código&lt;/h1&gt;&#xA;&lt;h2 id=&#34;criando-o-projeto&#34;&gt;&lt;strong&gt;Criando o Projeto&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Antes de começar o código vamos criar um projeto no Visual Studio, procure e selecione &lt;em&gt;Dynamic Link Library (DLL)&lt;/em&gt; para C++ como tipo de projeto como na imagem a seguir.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:38113/images/ac-hack-7.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Dê um nome ao projeto e escolha um local para salvá-lo e teremos uma estrutura inicial desta forma.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:38113/images/ac-hack-8.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;A estrutura do nosso código se dividirá em 3 funções, &lt;strong&gt;&lt;code&gt;DllMain&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;HackThread&lt;/code&gt;&lt;/strong&gt; e &lt;strong&gt;&lt;code&gt;UpdatePlayerStats&lt;/code&gt;&lt;/strong&gt;. Irei explicar mais adiante detalhadamente cada uma.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Softphones e telefonia pela Internet</title>
      <link>http://localhost:38113/blog/2024-01-13-voip-calls/</link>
      <pubDate>Sat, 13 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-01-13-voip-calls/</guid>
      <description>&lt;h2 id=&#34;introdução&#34;&gt;Introdução&lt;/h2&gt;&#xA;&lt;p&gt;Você já ouviu falar de VoIP e softphones? Neste post, vamos aprender um pouco sobre os fundamentos da telefonia pela Internet e ver na prática a configuração de um software para efetuar chamadas telefônicas que se aproveita da linha fixa telefônica que vem junto do seu modem de internet.&lt;/p&gt;&#xA;&lt;p&gt;Antigamente, para realizar chamadas telefônicas, era comum a utilização de um telefone fixo com fio. Para isso, era necessário se conectar à rede PSTN (&lt;em&gt;Public Switched Telephone Network&lt;/em&gt; ou Rede Telefônica Pública Comutada), uma infraestrutura mundial de redes de telefonia pública que utiliza cabos de cobre ou fibra óptica para transmitir dados de voz analógicos.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Entendendo o Papel do Kernel na Segurança de Jogos Online</title>
      <link>http://localhost:38113/blog/2024-01-12-kernel-cheating/</link>
      <pubDate>Fri, 12 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-01-12-kernel-cheating/</guid>
      <description>&lt;h1 id=&#34;o-que-é-o-kernel&#34;&gt;O que é o kernel&lt;/h1&gt;&#xA;&lt;p&gt;Quando falamos em sistemas operacionais, em geral pensamos em recursos visuais e interativos como suas aplicações e interface gráfica. No entanto, além de fornecer a interface com o usuário, o sistema também precisa se comunicar com a parte física do computador: o &lt;em&gt;hardware&lt;/em&gt;. Por conta disso, em geral definimos duas categorias de atuação de um sistema operacional:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;User level&lt;/li&gt;&#xA;&lt;li&gt;Kernel level&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;A primeira delas, que seria o nível de usuário ou espaço de usuário, consiste em todo o espaço reservado para executar aplicações comuns instaladas em um sistema, como o navegador, o editor de textos ou até mesmo binários em linha de comando. Quando esses programas são executados, o kernel aloca os recursos necessários para as mesmas, criando uma espécie de &lt;em&gt;sandbox&lt;/em&gt;, com uma quantidade qualquer de memória virtual.&lt;/p&gt;</description>
    </item>
    <item>
      <title>pwn 101: Desafios de Introdução a Buffer Overflow</title>
      <link>http://localhost:38113/blog/2024-01-12-pwn-101-desafios-de-introdu%C3%A7%C3%A3o-a-buffer-overflow-2944951e3ef04485a957cea3da0e3a4a/</link>
      <pubDate>Fri, 12 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-01-12-pwn-101-desafios-de-introdu%C3%A7%C3%A3o-a-buffer-overflow-2944951e3ef04485a957cea3da0e3a4a/</guid>
      <description>&lt;p&gt;Essa postagem tem como objetivo iniciar a jornada no mundo de pwning de maneira didática, ao demonstrar um&#xA;Buffer Over Flow, um exploit moderno que obtem vantagem sobre a Stack e buffers de memória.&lt;/p&gt;&#xA;&lt;h1 id=&#34;conceitos-básicos-de-programas&#34;&gt;Conceitos Básicos de Programas&lt;/h1&gt;&#xA;&lt;p&gt;Antes de tudo, é importante ter em mente alguns conceitos importantes antes de começar a jornada em pwning. Certos conceitos de low-level e como os programas são compostos vão ser extremamente importantes para entender&lt;/p&gt;</description>
    </item>
    <item>
      <title>IPTables: Análise detalhada sobre o IPTables</title>
      <link>http://localhost:38113/blog/2024-01-08-analysis_iptables/</link>
      <pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-01-08-analysis_iptables/</guid>
      <description>&lt;h2 id=&#34;resumo&#34;&gt;RESUMO&lt;/h2&gt;&#xA;&lt;p&gt;Este trabalho tem como objetivo apresentar uma análise detalhada sobre o IPTables, uma ferramenta de firewall amplamente utilizada no sistema operacional Linux, com foco em sua eficácia na proteção e segurança de redes. Através de uma abordagem baseada na estrutura do modelo OSI (Open Systems Interconnection), este documento explora o conceito do IPTables, sua função, importância e modos de funcionamento. Além disso, são destacadas suas configurações e exemplos reais de como essa ferramenta atua na proteção contra diversos tipos de ataques cibernéticos.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Redes: IDS e IPS</title>
      <link>http://localhost:38113/blog/2024-01-08-redes-ips-ids/</link>
      <pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-01-08-redes-ips-ids/</guid>
      <description>&lt;h2 id=&#34;introdução&#34;&gt;Introdução&lt;/h2&gt;&#xA;&lt;p&gt;O objetivo dessa postagem é introduzir o leitor às principais diferenças entre IDS (sistemas de detecção a intrusões) e IPS (sistemas de prevenção a intrusões), destacando a diferença de desempenho e aplicação desses dois sistemas.&lt;/p&gt;&#xA;&lt;h2 id=&#34;o-que-é-o-ids&#34;&gt;O que é o IDS?&lt;/h2&gt;&#xA;&lt;p&gt;O IDS (Sistema de Detecção de Intrusões) é projetado para identificar atividades suspeitas ou comportamentos anômalos na rede. O IDS monitora o tráfego em tempo real em busca de padrões que possam indicar uma ameaça.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vulnerabilidades do Windows Subsystem for Linux (WSL)</title>
      <link>http://localhost:38113/blog/2024-08-06-vulnerabilities_wsl/</link>
      <pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-08-06-vulnerabilities_wsl/</guid>
      <description>&lt;h2 id=&#34;resumo&#34;&gt;RESUMO&lt;/h2&gt;&#xA;&lt;p&gt;Este trabalho tem como objetivo apresentar uma análise detalhada sobre as vulnerabilidades doVulnerabilidades do windows subsystem for linux (WSL), uma funcionalidade do sistema operacional Windows que permite aos usuários executar um sistema operacional Linux dentro do próprio sistema operacional Windows. Este trabalho tem o objetivo de explorar as vulnerabilidades do WSL de uma maneira estruturada e detalhada, ajudando a aumentar a conscientização e a segurança em torno desta ferramenta útil, mas potencialmente vulnerável.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Assault Cube Hack: Parte 1</title>
      <link>http://localhost:38113/blog/2024-01-07-assault-cube-hack-parte-1/</link>
      <pubDate>Sun, 07 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-01-07-assault-cube-hack-parte-1/</guid>
      <description>&lt;h1 id=&#34;análise-do-jogo&#34;&gt;Análise do Jogo&lt;/h1&gt;&#xA;&lt;h2 id=&#34;introdução&#34;&gt;Introdução&lt;/h2&gt;&#xA;&lt;p&gt;Este material visa fornecer um olhar detalhado sobre o processo de desenvolvimento de uma POC, &lt;em&gt;proof of concept&lt;/em&gt;, para cheats internos usando o jogo Assault Cube, um jogo de tiro em primeira pessoa de código aberto, perfeito para o escopo desse material.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Nosso objetivo aqui não é encorajar o uso desonesto de cheats, mas sim explorar as complexidades e habilidades técnicas necessárias para criar e entender tais modificações.&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>WPA-2 PSK: Capturando conexões e quebra de hashes</title>
      <link>http://localhost:38113/blog/2024-01-06-wpa2-psk/</link>
      <pubDate>Sat, 06 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-01-06-wpa2-psk/</guid>
      <description>&lt;h2 id=&#34;introdução&#34;&gt;Introdução&lt;/h2&gt;&#xA;&lt;p&gt;O objetivo dessa postagem é introduzir o leitor às principais etapas de conexão do protocolo WPA2-PSK (Wi-Fi Protected Access Pre Shared Key) e como os ataques a esse protocolo funcionam.&lt;/p&gt;&#xA;&lt;h2 id=&#34;o-que-é-o-wpa2-psk&#34;&gt;O Que é o WPA2-PSK?&lt;/h2&gt;&#xA;&lt;p&gt;O Protocolo WPA2-PSK (Wi-Fi Protected Access 2 - Pre-Shared Key) é um padrão de segurança para redes sem fio que foi desenvolvido para melhorar a proteção oferecida pelo seu antecessor, o WPA (Wi-Fi Protected Access). O WPA2-PSK é amplamente utilizado para proteger redes Wi-Fi domésticas e empresariais, garantindo a confidencialidade e a integridade das comunicações sem fio.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Guia Básico do Burp Suite: Explorando requisições com o Burp</title>
      <link>http://localhost:38113/blog/2023-12-24-guia-burp/</link>
      <pubDate>Sun, 24 Dec 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2023-12-24-guia-burp/</guid>
      <description>&lt;h2 id=&#34;introdução&#34;&gt;Introdução&lt;/h2&gt;&#xA;&lt;p&gt;O objetivo dessa postagem é introduzir o leitor às principais funcionalidades do Burp Suite.&lt;/p&gt;&#xA;&lt;h2 id=&#34;o-que-é-o-burp-suite&#34;&gt;O Que é o Burp Suite?&lt;/h2&gt;&#xA;&lt;p&gt;Em termos simples, o Burp Suite é um software projetado para testes de segurança em aplicativos web.&lt;/p&gt;&#xA;&lt;h3 id=&#34;principais-funcionalidades&#34;&gt;Principais Funcionalidades:&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Proxy&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;O proxy intercepta as requisições e respostas entre o navegador (cliente) e o servidor, permitindo aos usuários analisar e manipular o tráfego. Isso é fundamental para identificar e corrigir possíveis falhas de segurança.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ReDoS</title>
      <link>http://localhost:38113/blog/2018-06-03-redos/</link>
      <pubDate>Sun, 03 Jun 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2018-06-03-redos/</guid>
      <description>&lt;p&gt;Quinta-feira passada, eu estava procrastinando como sempre, quando me deparei com &lt;a href=&#34;https://youtu.be/IIwgeZgZFBo&#34;&gt;um vídeo&lt;/a&gt; de uma talk chamada &amp;ldquo;The State of the Web&amp;rdquo;. O título do vídeo em questão era &amp;ldquo;JavaScript Vulnerabilities&amp;rdquo;. Como amante de web pretensioso que sou, logo pensei &amp;ldquo;vou abrir, mas duvido que aprenda algo novo&amp;rdquo;. Apenas 51 segundos depois, o entrevistado disse a seguinte frase (traduzida):&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Também há coisas que as pessoas não pensam sobre, como &lt;strong&gt;regular expression denial-of-service.&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Keyloggers</title>
      <link>http://localhost:38113/blog/2018-05-23-keyloggers/</link>
      <pubDate>Wed, 23 May 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2018-05-23-keyloggers/</guid>
      <description>&lt;h3 id=&#34;o-que-são-para-que-servem-e-como-fazer-um&#34;&gt;O que são, para que servem, e como fazer um?&lt;/h3&gt;&#xA;&lt;p&gt;Uma das ferramentas potencialmente maliciosas mais bem conhecidas na área de computação é o &lt;em&gt;keylogger&lt;/em&gt;. Um keylogger é um programa (ou dispositivo) que detecta quando alguma tecla é pressionada no teclado e, de uma maneira ou de outra, guarda essa informação — seja para uso futuro pelo próprio usuário ou não.&lt;/p&gt;&#xA;&lt;p&gt;É importante notar que um keylogger não necessariamente é um spyware, isto é, um programa para espionar no usuário sem consentimento. O nome &lt;em&gt;keylogger&lt;/em&gt; se refere somente à funcionalidade da ferramenta e não ao seu uso.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
