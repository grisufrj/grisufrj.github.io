<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C on Blog do GRIS</title>
    <link>http://localhost:38113/tags/c/</link>
    <description>Recent content in C on Blog do GRIS</description>
    <generator>Hugo</generator>
    <language>pt</language>
    <lastBuildDate>Fri, 12 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:38113/tags/c/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>pwn 101: Desafios de Introdução a Buffer Overflow</title>
      <link>http://localhost:38113/blog/2024-01-12-pwn-101-desafios-de-introdu%C3%A7%C3%A3o-a-buffer-overflow-2944951e3ef04485a957cea3da0e3a4a/</link>
      <pubDate>Fri, 12 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-01-12-pwn-101-desafios-de-introdu%C3%A7%C3%A3o-a-buffer-overflow-2944951e3ef04485a957cea3da0e3a4a/</guid>
      <description>&lt;p&gt;Essa postagem tem como objetivo iniciar a jornada no mundo de pwning de maneira didática, ao demonstrar um&#xA;Buffer Over Flow, um exploit moderno que obtem vantagem sobre a Stack e buffers de memória.&lt;/p&gt;&#xA;&lt;h1 id=&#34;conceitos-básicos-de-programas&#34;&gt;Conceitos Básicos de Programas&lt;/h1&gt;&#xA;&lt;p&gt;Antes de tudo, é importante ter em mente alguns conceitos importantes antes de começar a jornada em pwning. Certos conceitos de low-level e como os programas são compostos vão ser extremamente importantes para entender&lt;/p&gt;</description>
    </item>
    <item>
      <title>Write Up do Desafio Try me Out</title>
      <link>http://localhost:38113/blog/2024-01-09-write-up-try-me-out/</link>
      <pubDate>Tue, 09 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:38113/blog/2024-01-09-write-up-try-me-out/</guid>
      <description>&lt;p&gt;Este foi um dos desafios inclusos no CTF da H2HC 2023. Para resolver esse desafio de forma mais elegante, é necessário observar os procedimentos matemáticos realizados e perceber suas relações com um algoritmo de decomposição de matrizes bem conhecido.&lt;/p&gt;&#xA;&lt;h3 id=&#34;entendendo-o-código&#34;&gt;Entendendo o código&lt;/h3&gt;&#xA;&lt;p&gt;A principal função deste programa é a função verify, que recebe um array de 24 caracteres. Isso dá o tamanho da flag. As variáveis mat1 e mat2 são arrays de arrays, o que é uma notação conhecida para matrizes. Além disso, mat2 é a transposta de mat1. A partir dessas variáveis, são encontradas outras duas, AAT e ATA, também matrizes, e surgem ma multiplicação de mat1 por mat2 e de mat2 por mat1, respectivamente. A função MatMul faz excluisvamente a multiplicação entre matrizes.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
